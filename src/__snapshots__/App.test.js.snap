exports[`App view should match snapshot 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <div
    className="app">
    <Navbar
        closeAndNavigate={[Function]}
        menuOpen={false}
        toggleMenu={[Function]} />
    <main
        className="content-container ">
        <Home />
        <About />
        <Speakers />
        <Schedule />
        <Registration />
        <Location />
    </main>
    <ToTop />
    <footer
        className="main-footer">
        <small>
            Design and development – Frias Design®
        </small>
    </footer>
</div>,
  "nodes": Array [
    <div
      className="app">
      <Navbar
            closeAndNavigate={[Function]}
            menuOpen={false}
            toggleMenu={[Function]} />
      <main
            className="content-container ">
            <Home />
            <About />
            <Speakers />
            <Schedule />
            <Registration />
            <Location />
      </main>
      <ToTop />
      <footer
            className="main-footer">
            <small>
                  Design and development – Frias Design®
            </small>
      </footer>
</div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <App />,
      "_debugID": 3,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": App {
        "_reactInternalInstance": [Circular],
        "closeAndNavigate": [Function],
        "context": Object {},
        "props": Object {},
        "refs": Object {},
        "state": Object {
          "menuOpen": false,
          "navigateTo": "",
        },
        "toggleMenu": [Function],
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 2,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <div
          className="app">
          <Navbar
                    closeAndNavigate={[Function]}
                    menuOpen={false}
                    toggleMenu={[Function]} />
          <main
                    className="content-container ">
                    <Home />
                    <About />
                    <Speakers />
                    <Schedule />
                    <Registration />
                    <Location />
          </main>
          <ToTop />
          <footer
                    className="main-footer">
                    <small>
                              Design and development – Frias Design®
                    </small>
          </footer>
</div>,
        "_debugID": 4,
        "_renderedOutput": <div
          className="app">
          <Navbar
                    closeAndNavigate={[Function]}
                    menuOpen={false}
                    toggleMenu={[Function]} />
          <main
                    className="content-container ">
                    <Home />
                    <About />
                    <Speakers />
                    <Schedule />
                    <Registration />
                    <Location />
          </main>
          <ToTop />
          <footer
                    className="main-footer">
                    <small>
                              Design and development – Frias Design®
                    </small>
          </footer>
</div>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <App />,
}
`;
